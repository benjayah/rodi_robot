#!/usr/bin/env python

"""Launches a ROS node that communicates with a RoDI."""

import rospy
from geometry_msgs.msg import Twist
from sensor_msgs.msg import Range
from rodi_robot import Transport


def cmd_vel_cb(msg, transport):
    if msg.angular.z == 0 and msg.linear.x == 0:
        transport.stop()
        return

    if msg.linear.x > 0:
        transport.move_forward()
        return

    if msg.linear.x < 0:
        transport.move_reverse()
        return

    if msg.angular.z > 0:
        transport.move_left()
        return

    if msg.angular.z < 0:
        transport.move_right()
        return

if __name__ == '__main__':
    rospy.init_node('rodi_robot_node')
    hostname = rospy.get_param('~hostname', '192.168.4.1')
    port = rospy.get_param('~port', '1234')

    transport = Transport(hostname, port)

    sub = rospy.Subscriber('cmd_vel', Twist, cmd_vel_cb, transport)
    pub = rospy.Publisher('ultrasound', Range, queue_size=1)

    rate = rospy.Rate(2)  # 2 Hz

    ultrasonic_sensor = Range()
    ultrasonic_sensor.radiation_type = 0  # ULTRASOUND
    ultrasonic_sensor.header.frame_id = "/ultrasound"
    ultrasonic_sensor.field_of_view = 0.52
    ultrasonic_sensor.min_range = 0.2
    ultrasonic_sensor.max_range = 4.0

    while not rospy.is_shutdown():
        try:
            ultrasonic_sensor.range = float(transport.see()) / 100.0
            ultrasonic_sensor.header.stamp = rospy.Time.now()
            pub.publish(ultrasonic_sensor)
        except Exception as exception:
            rospy.logerr("getting sonar data failed: " + str(exception))

        rate.sleep()
